version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - chatapp-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - chatapp-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin12345
      POSTGRES_DB: chat-app
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - chatapp-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - chatapp-network

  backend:
    build: ./backend
    environment:
      DATABASE_URL: "postgresql://admin:admin12345@postgres:5432/chat-app?ssl=false"
      JWT: "secret" # Consider using Docker secrets for sensitive data
      BACKEND_PORT: 3000
      FRONTEND_PORT: 5173
      FRONTEND_URL: "http://frontend:5173"
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    networks:
      - chatapp-network

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    environment:
      VITE_BACKEND_URL: http://backend:3000
      VITE_WS_URL: ws://ws:8080
    volumes:
      - ./frontend:/app
    networks:
      - chatapp-network

  ws:
    build: ./ws
    ports:
      - "8080:8080"
    environment:
      WS_URL: "http://ws:8080"
      KAFKA_BROKER: "kafka:29092"
      REDIS_URL: redis://redis:6379
    volumes:
      - ./ws:/app
    networks:
      - chatapp-network

  kafka-consumer:
    build: ./kafka-consumer
    environment:
      KAFKA_BROKER: kafka:29092
      DATABASE_URL: "postgresql://admin:admin12345@postgres:5432/chat-app?ssl=false"
    depends_on:
      - kafka
      - postgres
    volumes:
      - ./kafka-consumer:/app
    networks:
      - chatapp-network

volumes:
  pgdata:

networks:
  chatapp-network:
